{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: 0\n};\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","value","counterSlice","name","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["/home/luan/project-react-express/front-end/src/features/counter/counterSlice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport type { PayloadAction } from '@reduxjs/toolkit'\n\nexport interface CounterState {\n  value: number\n}\n\nconst initialState: CounterState = {\n  value: 0,\n}\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1\n    },\n    decrement: (state) => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\nexport default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAO9C,MAAMC,YAA0B,GAAG;EACjCC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpB;MACA;MACA;MACA;MACAA,KAAK,CAACL,KAAK,IAAI,CAAC;IAClB,CAAC;IACDM,SAAS,EAAGD,KAAK,IAAK;MACpBA,KAAK,CAACL,KAAK,IAAI,CAAC;IAClB,CAAC;IACDO,iBAAiB,EAAEA,CAACF,KAAK,EAAEG,MAA6B,KAAK;MAC3DH,KAAK,CAACL,KAAK,IAAIQ,MAAM,CAACC,OAAO;IAC/B;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEL,SAAS;EAAEE,SAAS;EAAEC;AAAkB,CAAC,GAAGN,YAAY,CAACS,OAAO;AAE/E,eAAeT,YAAY,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}